import React, { Component } from 'react'
import ToDoInput from './ToDoInput'
import ToDoing from './ToDoing'

export default class ToDoList extends Component {
	constructor() {
		super();
		var worked = 0;
		var wait = 0;
		var arr = JSON.parse(localStorage.getItem('todo'));
		if (arr === null) {
			arr = [];
		} else {
			arr.map((item) => {
				if (item.done === 'true') {
					return worked++;
				} else {
					return wait++;
				}
			});
		}
		this.state = {
			todo: arr,
			wait: wait,
			worked: worked
		}
	}

	addItem = (data) => {
		//执行这里实现重新渲染
		if (data !== '') {
			var obj1 = {
				title: data,
				done: 'false'
			}
			
			this.setState((state, props) => {
				let newArr=[...state.todo];
				newArr.push(obj1);
				this.addLocal(newArr);
				return {
					todo:newArr,
					wait: ++state.wait
				}
			})
		}


	}
	addLocal = (addArr) => {
		localStorage.setItem("todo", JSON.stringify(addArr));
	}
	delItem = (index) => {
		this.setState((state, props) => {
			let todo = [...state.todo];
			if (todo[index].done === 'true') {
				todo.splice(index, 1);
				this.addLocal(todo);
				return {
					todo: todo,
					worked: --state.worked
				}
			} else {
				todo.splice(index, 1);
				this.addLocal(todo);
				return {
					todo: todo,
					wait: --state.wait
				}
			}
		})
	}
	choice = (index) => {
		let newTodo = [...this.state.todo];
		if (newTodo[index].done === 'true') {
			newTodo[index].done = 'false';
			this.setState((state, props) => {
				state.todo[index].done = 'false';
				return {
					todo: state.todo,
					wait: ++state.wait,
					worked: --state.worked
				}
			})
		} else {
			newTodo[index].done = 'true';
			this.setState((state, props) => {
				state.todo[index].done = 'true';
				return {
					todo: state.todo,
					wait: --state.wait,
					worked: ++state.worked
				}
			})
		}
		this.addLocal(newTodo);
	}
	render() {
		return (
			<div>
				<ToDoInput add={this.addItem} />
				<ToDoing del={this.delItem} todo={this.state.todo} choice={this.choice} num={{ wait: this.state.wait, worked: this.state.worked }}/>
			</div>
		)
	}
}
