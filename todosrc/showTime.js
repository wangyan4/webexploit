import React, { Fragment, Component } from 'react';

// 类声明组件
class ShowTime extends Component {
    constructor(props) {
        super(props);//不传拿不到
        this.state = {
            time: new Date().toLocaleString(),
            a: 100,
            b: 100
        };
        setInterval(() => {
            this.setState({
                time: new Date().toLocaleString()
            })
        }, 1000);
        console.log('constructor');
    }
    //返回布尔值
    shouldComponentUpdate() {
        if (this.state.a > 10) {
            return true;
        }
        return false;
    }
    render() {
        console.log('render');
        var { name, age, arr } = this.props;
        return (<Fragment>
            {/*条件渲染*/}
            {/*三目运算符  逻辑短路*/}
            {/*逻辑短路 前真取后*/}
            <div>年龄:{age}</div>
            {name.length > 5 && <div>姓名:{name}</div>}
            <div>{this.state.time}</div>

            {/*循环渲染*/}
            <div>
                {
                    arr.map((item, index) => {
                        if (index % 2 === 0) {
                            return <p key={item}>{item}</p>
                        }
                    })
                }
            </div>
        </Fragment>
        )
    }
    componentDidUpdate(preProps, preStates, data) {
        console.log('did update');
        // console.log(preStates);//前一个状态
        // console.log(this.state.time);//当前状态
        //preProps 前一个属性  this.props当前属性
    }
    getSnapshotBeforeUpdate() {
        console.log("getsnapshot");
        return { name: this.state.a };
    }
    componentDidMount() {
        console.log('didMount');
    }
}
//默认导出:只能默认导出一次
//被引入时可以重命名
//export default ShowTime;


//命名导出：
//被引入时不可以重命名
export {ShowTime};
