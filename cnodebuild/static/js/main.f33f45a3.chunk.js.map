{"version":3,"sources":["component/Header.js","container/All.js","container/Good.js","container/Share.js","container/Ask.js","container/Job.js","container/Client.js","container/Content.js","container/Home.js","component/Contentheader.js","container/Start.js","container/About.js","container/API.js","container/Login.js","container/Register.js","App.js","index.js"],"names":["Header","className","src","alt","to","All","formatMsgTime","timespan","milliseconds","dateTime","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","now","parse","toDateString","Math","round","state","data","page","this","props","match","params","url_api","fetch","method","then","res","json","setState","prevProps","prevStates","url","slice","map","item","key","id","author","avatar_url","reply_count","visit_count","href","title","last_reply_at","Component","Jinghua","tab","Content","dangerouslySetInnerHTML","__html","content","Home","change","e","alist","document","querySelectorAll","i","length","target","console","log","onClick","exact","path","component","Good","Share","Ask","Job","Client","Contentheader","urlpath","Start","About","API","Login","login","history","push","gitLogin","window","location","action","type","value","Register","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f33f45a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nexport default function Header(){\r\n  return(\r\n    <div className=\"header\">\r\n      <header>\r\n        <img src=\"https://static2.cnodejs.org/public/images/cnodejs_light.svg\" alt=\"\"/>\r\n        <div>\r\n          <Link to=\"/home\">首页</Link>\r\n          <Link to=\"/start\">新手入门</Link>\r\n          <Link to=\"/api\">API</Link>\r\n          <Link to=\"/about\">关于</Link>\r\n          <Link to=\"/register\">注册</Link>\r\n          <Link to=\"/login\">登录</Link>\r\n        </div>\r\n      </header>\r\n    </div>\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class All extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=all&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.page !== this.props.match.params.page) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=all&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan) => {\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr = '一年前';\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n\r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let { url } = this.props.match;\r\n    url = url.slice(0, 5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n        {\r\n          this.state.data.map((item) => {\r\n            return (\r\n              <div key={item.id}>\r\n                <div className=\"leftList\">\r\n                  <span>\r\n                    <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                    <span>{item.reply_count}</span>\r\n                    <span>/</span>\r\n                    <span className=\"spmargin\">{item.visit_count}</span>\r\n                  </span>\r\n                  <span>\r\n                    <span>置顶</span>\r\n                    <span>\r\n                      <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                      <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                    </span>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/all/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Jinghua extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=good&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=good&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan)=>{\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr='一个月前';\r\n\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n  \r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    url = url.slice(0,5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n      {\r\n        this.state.data.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"leftList\">\r\n                <span>\r\n                  <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                  <span>{item.reply_count}</span>\r\n                  <span>/</span>\r\n                  <span className=\"spmargin\">{item.visit_count}</span>\r\n                </span>\r\n                <span>\r\n                  <span>精华</span>\r\n                  <span>\r\n                    <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                    <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/good/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Jinghua extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=share&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=share&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan)=>{\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr='一年前';\r\n\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n  \r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    url = url.slice(0,5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n      {\r\n        this.state.data.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"leftList\">\r\n                <span>\r\n                  <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                  <span>{item.reply_count}</span>\r\n                  <span>/</span>\r\n                  <span className=\"spmargin\">{item.visit_count}</span>\r\n                </span>\r\n                <span>\r\n                  <span>置顶</span>\r\n                  <span>\r\n                    <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                    <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/share/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Jinghua extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=ask&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.page !== this.props.match.params.tab) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=ask&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan)=>{\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr='一年前';\r\n\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n  \r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    url = url.slice(0,5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n      {\r\n        this.state.data.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"leftList\">\r\n                <span>\r\n                  <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                  <span>{item.reply_count}</span>\r\n                  <span>/</span>\r\n                  <span className=\"spmargin\">{item.visit_count}</span>\r\n                </span>\r\n                <span>\r\n                  <span>置顶</span>\r\n                  <span>\r\n                    <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                    <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/ask/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Jinghua extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=job&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=job&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan)=>{\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr='一个月前';\r\n\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n  \r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    url = url.slice(0,5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n      {\r\n        this.state.data.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"leftList\">\r\n                <span>\r\n                  <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                  <span>{item.reply_count}</span>\r\n                  <span>/</span>\r\n                  <span className=\"spmargin\">{item.visit_count}</span>\r\n                </span>\r\n                <span>\r\n                  <span>置顶</span>\r\n                  <span>\r\n                    <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                    <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/job/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Jinghua extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let page = this.props.match.params.page;\r\n    let url_api = `https://cnodejs.org/api/v1/topics?tab=dev&page=${page || 1}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.tab !== this.props.match.params.tab) {\r\n      let page = this.props.match.params.page;\r\n      let url_api = `https://cnodejs.org/api/v1/topics?tab=dev&page=${page || 1}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n\r\n  }\r\n  formatMsgTime = (timespan)=>{\r\n    var dateTime = new Date(timespan);\r\n    var year = dateTime.getFullYear();\r\n    var month = dateTime.getMonth() + 1;\r\n    var day = dateTime.getDate();\r\n    var hour = dateTime.getHours();\r\n    var minute = dateTime.getMinutes();\r\n    var now = new Date();\r\n    var now_new = Date.parse(now.toDateString());\r\n\r\n    var milliseconds = 0;\r\n    var timeSpanStr='一个月前';\r\n\r\n    milliseconds = now_new - Date.parse(dateTime);\r\n  \r\n    if (milliseconds <= 1000 * 60 * 1) {\r\n      timeSpanStr = '刚刚';\r\n    }\r\n    else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\r\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前';\r\n    }\r\n    else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前';\r\n    }\r\n    else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\r\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前';\r\n    }\r\n    else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\r\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute;\r\n    } else {\r\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute;\r\n    }\r\n    return timeSpanStr;\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    url = url.slice(0,5);\r\n    return (\r\n      <div className=\"leftContent\">\r\n      {\r\n        this.state.data.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <div className=\"leftList\">\r\n                <span>\r\n                  <img src={`${item.author.avatar_url}`} alt=\"\" />\r\n                  <span>{item.reply_count}</span>\r\n                  <span>/</span>\r\n                  <span className=\"spmargin\">{item.visit_count}</span>\r\n                </span>\r\n                <span>\r\n                  <span>置顶</span>\r\n                  <span>\r\n                    <a href={`${url}/content/${item.id}`}>{item.title}</a>\r\n                    <span>{this.formatMsgTime(item.last_reply_at)}</span>\r\n                  </span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      <div>\r\n          <ul className=\"bottomList\">\r\n            {\r\n              [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) => {\r\n                return (\r\n                  <li key={item}><Link to={`${url}/client/${item}`}>{item}</Link></li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Content extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let id = this.props.match.params.id;\r\n    let url_api = `https://cnodejs.org/api/v1/topic/${id}`;\r\n    let obj = {\r\n      method: \"get\"\r\n    }\r\n    fetch(url_api, obj)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          data: data.data\r\n        })\r\n      })\r\n  }\r\n  componentDidUpdate(prevProps, prevStates) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      let id = this.props.match.params.id;\r\n      let url_api = `https://cnodejs.org/api/v1/topic/${id}`;\r\n      let obj = {\r\n        method: \"get\"\r\n      }\r\n      fetch(url_api, obj)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          this.setState({\r\n            data: data.data\r\n          })\r\n        })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"contentList\" dangerouslySetInnerHTML={{__html:this.state.data.content}}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Route,Link,Switch,Redirect} from 'react-router-dom'\r\nimport All from './All';\r\nimport Good from './Good';\r\nimport Share from './Share';\r\nimport Ask from './Ask';\r\nimport Job from './Job';\r\nimport Client from './Client';\r\nimport Content from './Content';\r\nexport default class Home extends Component {\r\n  constructor(){\r\n    super();\r\n    this.state={\r\n      id:'',\r\n      page:1\r\n    }\r\n  }\r\n  change=(e)=>{\r\n    let alist = document.querySelectorAll('.homeLink a');\r\n    for(var i =0;i<alist.length;++i){\r\n      alist[i].className='';\r\n    }\r\n    e.target.className='aactive';\r\n  }\r\n  setId(id){\r\n    console.log(id);\r\n    this.setState({\r\n      id:id\r\n    })\r\n  }\r\n  render() {\r\n    let {url} = this.props.match;\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Link onClick={this.change} to={`${url}/all`} className=\"aactive\">全部</Link>\r\n          <Link onClick={this.change} to={`${url}/good`}>精华</Link>\r\n          <Link onClick={this.change} to={`${url}/share`}>分享</Link>\r\n          <Link onClick={this.change} to={`${url}/ask`}>问答</Link>\r\n          <Link onClick={this.change} to={`${url}/job`}>招聘</Link>\r\n          <Link onClick={this.change} to={`${url}/client`}>客户端测试</Link>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path={`${url}/all`} component={All}/>\r\n            <Route exact path={`${url}/good`} component={Good}/>\r\n            <Route exact path={`${url}/share`} component={Share}/>\r\n            <Route exact path={`${url}/ask`} component={Ask}/>\r\n            <Route exact path={`${url}/job`} component={Job}/>\r\n            <Route exact path={`${url}/client`} component={Client}/>\r\n            <Route path={`${url}/all/:page`} component={All}/>\r\n            <Route path={`${url}/good/:page`} component={Good}/>\r\n            <Route path={`${url}/share/:page`} component={Share}/>\r\n            <Route path={`${url}/ask/:page`} component={Ask}/>\r\n            <Route path={`${url}/job/:page`} component={Job}/>\r\n            <Route path={`${url}/client/:page`} component={Client}/>\r\n            <Route path={`${url}/content/:id`} component={Content}/>\r\n            <Redirect to={`${url}/all`}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Contentheader extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to=\"/home\">主页</Link>\r\n        <span>/</span>\r\n        <Link to={this.props.urlpath}>{this.props.title}</Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contentheader from '../component/Contentheader'\r\n\r\nexport default class Start extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Contentheader title=\"Node.js新手入门\" urlpath=\"/start\"/>\r\n        </div>\r\n        <div>\r\n          Start\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contentheader from '../component/Contentheader'\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Contentheader title=\"关于\" urlpath=\"/about\" />\r\n        </div>\r\n        <div>\r\n          About\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contentheader from '../component/Contentheader'\r\n\r\nexport default class API extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Contentheader title=\"API\" urlpath=\"/api\"/>\r\n        </div>\r\n        <div>\r\n          API\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contentheader from '../component/Contentheader'\r\n\r\nexport default class Login extends Component {\r\n  login=()=>{\r\n    this.props.history.push('/home');\r\n  }\r\n  gitLogin=()=>{\r\n    window.location.href=\"https://github.com/login/oauth/authorize?response_type=code&redirect_uri=https%3A%2F%2Fcnodejs.org%2Fauth%2Fgithub%2Fcallback&client_id=0625d398dd9166a196e9\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Contentheader title=\"登陆\" urlpath=\"/login\" />\r\n        </div>\r\n        <div className=\"leftContent\">\r\n          <form action=\"\">\r\n            <div>\r\n              用户名<input type=\"text\"/>\r\n            </div>\r\n            <div>\r\n              密&ensp;&ensp;码<input type=\"password\"/><br/>\r\n              <input type=\"button\" value=\"登陆\" onClick={this.login}/>\r\n              <input type=\"button\" value=\"通过GitHub登陆\" onClick={this.gitLogin}/>\r\n              <span>忘记密码了?</span>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Contentheader from '../component/Contentheader'\r\n\r\nexport default class Register extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"homeLink\">\r\n          <Contentheader title=\"注册\" urlpath=\"/register\"/>\r\n        </div>\r\n        <div>\r\n          Register\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route,Switch,Redirect} from 'react-router-dom'\r\nimport Header from './component/Header'\r\nimport './index.css'\r\nimport Home from './container/Home'\r\nimport Start from './container/Start'\r\nimport About from './container/About'\r\nimport API from './container/API'\r\nimport Login from './container/Login'\r\nimport Register from './container/Register'\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"header\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"content\">\r\n          <div className=\"left\">\r\n            <Switch>\r\n              <Route path=\"/home\" component={Home}/>\r\n              <Route path=\"/start\" component={Start}/>\r\n              <Route path=\"/api\" component={API}/>\r\n              <Route path=\"/about\" component={About}/>\r\n              <Route path='/register' component={Register} />\r\n              <Route path=\"/login\" component={Login}/>\r\n              <Redirect to='/home'/>\r\n            </Switch>\r\n          </div>\r\n          <div className=\"right\">\r\n            <p>亲爱的刘老师辛苦了！！</p>\r\n            <p>四度春风化绸缪，</p>\r\n            <p>几番秋雨洗鸿沟。</p>\r\n            <p>黑发积霜织日月，</p>\r\n            <p>粉笔无言写春秋。</p>\r\n            <p>蚕丝吐尽春未老，</p>\r\n            <p>烛泪成灰秋更稠。</p>\r\n            <p>春播桃李三千圃，</p>\r\n            <p>秋来硕果满神州。</p>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}