{"version":3,"sources":["ToDoList/ToDoInput.js","ToDoList/ToDoing.js","ToDoList/ToDoList.js","index.js"],"names":["ToDoInput","handleInput","e","keyCode","props","add","target","value","className","type","onKeyDown","this","name","placeholder","Component","ToDoing","index","del","console","log","choice","checked","todo","num","wait","map","item","done","key","title","onChange","change","bind","onClick","delItem","worked","ToDoList","addItem","data","obj1","setState","state","newArr","push","addLocal","addArr","localStorage","setItem","JSON","stringify","splice","newTodo","arr","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"qPAEqBA,G,gNACpBC,YAAY,SAACC,GACK,KAAdA,EAAEC,UACJ,EAAKC,MAAMC,IAAIH,EAAEI,OAAOC,OACxBL,EAAEI,OAAOC,MAAM,K,wEAIhB,OACC,yBAAKC,UAAU,UACd,2BAAOC,KAAK,OAAOC,UAAWC,KAAKV,YAAaW,KAAK,QAAQC,YAAY,wC,GAVtCC,cCClBC,E,gLACZC,EAAOd,GACdS,KAAKP,MAAMa,IAAID,EAAOd,K,6BAEhBc,GACNE,QAAQC,IAAIH,GACZL,KAAKP,MAAMgB,OAAOJ,K,6BAEZd,GACHA,EAAEI,OAAOe,QACXnB,EAAEI,OAAOG,KAAO,GAEhBP,EAAEI,OAAOG,KAAO,Y,+BAGR,IAAD,OACJa,EAAOX,KAAKP,MAAMkB,KACtB,OACC,yBAAKd,UAAU,kBACd,wBAAIA,UAAU,qBACb,wDAAUG,KAAKP,MAAMmB,IAAIC,MAExBF,EAAKG,KAAI,SAACC,EAAMV,GACf,MAAkB,UAAdU,EAAKC,KACD,wBAAIC,IAAKF,EAAKG,OAAO,2BAAOpB,KAAK,WAAWqB,SAAU,EAAKC,OAAOC,KAAK,GAAOC,QAAS,EAAKb,OAAOY,KAAK,EAAKhB,KAAUU,EAAKG,MAAM,4BAAQI,QAAS,EAAKC,QAAQF,KAAK,EAAMhB,IAAzC,iBAElI,OAMX,wBAAIR,UAAU,mBACb,kDAASG,KAAKP,MAAMmB,IAAIY,QAEvBb,EAAKG,KAAI,SAACC,EAAMV,GACf,MAAkB,SAAdU,EAAKC,KACD,wBAAIC,IAAKZ,GAAO,2BAAOP,KAAK,WAAWY,QAAQ,UAAUS,SAAU,EAAKC,OAAOC,KAAK,GAAOC,QAAS,EAAKb,OAAOY,KAAK,EAAKhB,KAAUU,EAAKG,MAAM,4BAAQI,QAAS,EAAKC,QAAQF,KAAK,EAAMhB,IAAzC,iBAE/I,Y,GAvCsBF,aCChBsB,E,YACpB,aAAe,IAAD,uBACb,+CAsBDC,QAAU,SAACC,GAEV,GAAa,KAATA,EAAa,CAChB,IAAIC,EAAO,CACVV,MAAOS,EACPX,KAAM,SAGP,EAAKa,UAAS,SAACC,EAAOrC,GACrB,IAAIsC,EAAO,YAAID,EAAMnB,MAGrB,OAFAoB,EAAOC,KAAKJ,GACZ,EAAKK,SAASF,GACP,CACNpB,KAAKoB,EACLlB,OAAQiB,EAAMjB,WArCJ,EA4CdoB,SAAW,SAACC,GACXC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,KA7C/B,EA+CdX,QAAU,SAAClB,GACV,EAAKwB,UAAS,SAACC,EAAOrC,GACrB,IAAIkB,EAAI,YAAOmB,EAAMnB,MACrB,MAAyB,SAArBA,EAAKN,GAAOW,MACfL,EAAK4B,OAAOlC,EAAO,GACnB,EAAK4B,SAAStB,GACP,CACNA,KAAMA,EACNa,SAAUM,EAAMN,UAGjBb,EAAK4B,OAAOlC,EAAO,GACnB,EAAK4B,SAAStB,GACP,CACNA,KAAMA,EACNE,OAAQiB,EAAMjB,WA9DJ,EAmEdJ,OAAS,SAACJ,GACT,IAAImC,EAAO,YAAO,EAAKV,MAAMnB,MACD,SAAxB6B,EAAQnC,GAAOW,MAClBwB,EAAQnC,GAAOW,KAAO,QACtB,EAAKa,UAAS,SAACC,EAAOrC,GAErB,OADAqC,EAAMnB,KAAKN,GAAOW,KAAO,QAClB,CACNL,KAAMmB,EAAMnB,KACZE,OAAQiB,EAAMjB,KACdW,SAAUM,EAAMN,aAIlBgB,EAAQnC,GAAOW,KAAO,OACtB,EAAKa,UAAS,SAACC,EAAOrC,GAErB,OADAqC,EAAMnB,KAAKN,GAAOW,KAAO,OAClB,CACNL,KAAMmB,EAAMnB,KACZE,OAAQiB,EAAMjB,KACdW,SAAUM,EAAMN,YAInB,EAAKS,SAASO,IAxFd,IAAIhB,EAAS,EACTX,EAAO,EACP4B,EAAMJ,KAAKK,MAAMP,aAAaQ,QAAQ,SAJ7B,OAKD,OAARF,EACHA,EAAM,GAENA,EAAI3B,KAAI,SAACC,GACR,MAAkB,SAAdA,EAAKC,KACDQ,IAEAX,OAIV,EAAKiB,MAAQ,CACZnB,KAAM8B,EACN5B,KAAMA,EACNW,OAAQA,GAnBI,E,sEA6Fb,OACC,6BACC,kBAAC,EAAD,CAAW9B,IAAKM,KAAK0B,UACrB,kBAAC,EAAD,CAASpB,IAAKN,KAAKuB,QAASZ,KAAMX,KAAK8B,MAAMnB,KAAMF,OAAQT,KAAKS,OAAQG,IAAK,CAAEC,KAAMb,KAAK8B,MAAMjB,KAAMW,OAAQxB,KAAK8B,MAAMN,e,GAjGvFrB,aCAtCyC,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,U","file":"static/js/main.fc3a9c37.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './todo.css';\r\nexport default class ToDoInput extends Component {\r\n\thandleInput=(e)=>{\r\n\t\tif(e.keyCode === 13){\r\n\t\t\tthis.props.add(e.target.value);\r\n\t\t\te.target.value='';\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\">\r\n\t\t\t\t<input type=\"text\" onKeyDown={this.handleInput} name=\"value\" placeholder=\"请添加事件\"/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}","import React, { Component } from 'react'\r\nimport './todo.css'\r\n\r\nexport default class ToDoing extends Component {\r\n\tdelItem(index, e) {\r\n\t\tthis.props.del(index, e);\r\n\t}\r\n\tchoice(index){\r\n\t\tconsole.log(index);\r\n\t\tthis.props.choice(index);\r\n\t}\r\n\tchange(e){\r\n\t\tif(e.target.checked){\r\n\t\t\te.target.type = '';\r\n\t\t}else{\r\n\t\t\te.target.type = 'checked';\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tvar todo = this.props.todo;\r\n\t\treturn (\r\n\t\t\t<div className=\"center center1\">\r\n\t\t\t\t<ul className=\"unsuccess conmmen\">\r\n\t\t\t\t\t<h3>正在进行:{this.props.num.wait}</h3>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttodo.map((item, index) => {\r\n\t\t\t\t\t\t\tif (item.done === 'false') {\r\n\t\t\t\t\t\t\t\treturn <li key={item.title}><input type=\"checkbox\" onChange={this.change.bind(this)} onClick={this.choice.bind(this,index)}/>{item.title}<button onClick={this.delItem.bind(this, index)}>删除</button></li>\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treturn ''\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul className=\"success conmmen\">\r\n\t\t\t\t\t<h3>已完成:{this.props.num.worked}</h3>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttodo.map((item, index) => {\r\n\t\t\t\t\t\t\tif (item.done === 'true') {\r\n\t\t\t\t\t\t\t\treturn <li key={index}><input type=\"checkbox\" checked=\"checked\" onChange={this.change.bind(this)} onClick={this.choice.bind(this,index)}/>{item.title}<button onClick={this.delItem.bind(this, index)}>删除</button></li>\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treturn ''\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react'\r\nimport ToDoInput from './ToDoInput'\r\nimport ToDoing from './ToDoing'\r\n\r\nexport default class ToDoList extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tvar worked = 0;\r\n\t\tvar wait = 0;\r\n\t\tvar arr = JSON.parse(localStorage.getItem('todo'));\r\n\t\tif (arr === null) {\r\n\t\t\tarr = [];\r\n\t\t} else {\r\n\t\t\tarr.map((item) => {\r\n\t\t\t\tif (item.done === 'true') {\r\n\t\t\t\t\treturn worked++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn wait++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\ttodo: arr,\r\n\t\t\twait: wait,\r\n\t\t\tworked: worked\r\n\t\t}\r\n\t}\r\n\r\n\taddItem = (data) => {\r\n\t\t//执行这里实现重新渲染\r\n\t\tif (data !== '') {\r\n\t\t\tvar obj1 = {\r\n\t\t\t\ttitle: data,\r\n\t\t\t\tdone: 'false'\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState((state, props) => {\r\n\t\t\t\tlet newArr=[...state.todo];\r\n\t\t\t\tnewArr.push(obj1);\r\n\t\t\t\tthis.addLocal(newArr);\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttodo:newArr,\r\n\t\t\t\t\twait: ++state.wait\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t}\r\n\taddLocal = (addArr) => {\r\n\t\tlocalStorage.setItem(\"todo\", JSON.stringify(addArr));\r\n\t}\r\n\tdelItem = (index) => {\r\n\t\tthis.setState((state, props) => {\r\n\t\t\tlet todo = [...state.todo];\r\n\t\t\tif (todo[index].done === 'true') {\r\n\t\t\t\ttodo.splice(index, 1);\r\n\t\t\t\tthis.addLocal(todo);\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttodo: todo,\r\n\t\t\t\t\tworked: --state.worked\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttodo.splice(index, 1);\r\n\t\t\t\tthis.addLocal(todo);\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttodo: todo,\r\n\t\t\t\t\twait: --state.wait\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\tchoice = (index) => {\r\n\t\tlet newTodo = [...this.state.todo];\r\n\t\tif (newTodo[index].done === 'true') {\r\n\t\t\tnewTodo[index].done = 'false';\r\n\t\t\tthis.setState((state, props) => {\r\n\t\t\t\tstate.todo[index].done = 'false';\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttodo: state.todo,\r\n\t\t\t\t\twait: ++state.wait,\r\n\t\t\t\t\tworked: --state.worked\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnewTodo[index].done = 'true';\r\n\t\t\tthis.setState((state, props) => {\r\n\t\t\t\tstate.todo[index].done = 'true';\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttodo: state.todo,\r\n\t\t\t\t\twait: --state.wait,\r\n\t\t\t\t\tworked: ++state.worked\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.addLocal(newTodo);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<ToDoInput add={this.addItem} />\r\n\t\t\t\t<ToDoing del={this.delItem} todo={this.state.todo} choice={this.choice} num={{ wait: this.state.wait, worked: this.state.worked }}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ToDoList from './ToDoList/ToDoList'\nReactDOM.render(<ToDoList />,document.getElementById('root'));"],"sourceRoot":""}